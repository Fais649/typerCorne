/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        l1ls: l1ls {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
							 <&macro_press &mo 1 &kp LSHFT>
							, <&macro_pause_for_release>
							, <&macro_release &mo 1 &kp LSHFT>;

            label = "Layer1+LSHIFT";
        };

        l1lg: l1lg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
							 <&macro_press &mo 1 &kp LGUI>
							, <&macro_pause_for_release>
							, <&macro_release &mo 1 &kp LGUI>;

            label = "Layer1+LGUI";
        };
    };

 behaviors {
        l1t: l1t {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&l1ls>;
        };

        gl1t: g1lt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&l1lg>;
        };

        qu2qut: qu2qut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp LS(SQT)>;
        };

        semi2col: semi2col {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp LS(SEMI)>;
        };

        lcurly2lsquare: lcurly2lsquare {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(LBKT)>, <&kp LBKT>;
        };

        rcurly2rsquare: rcurly2rsquare {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(RBKT)>, <&kp RBKT>;
        };

        dot2greater: dot2greater {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp LS(DOT)>;
        };

        comma2less: comma2less {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&kp LS(COMMA)>;
        };
				
        slash2question: slash2question {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp LS(FSLH)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB              &kp Q  &kp W  &kp E     &kp R   &kp T              &kp Y      &kp U  &kp I        &kp O         &kp P            &kp DELETE
&mt LCTRL ESC        &kp A  &kp S  &kp D     &kp F   &kp G              &kp H      &kp J  &kp K        &kp L         &semi2col        &qu2qut
&kp LSHFT            &kp Z  &kp X  &kp C     &kp V   &kp B              &kp N      &kp M  &comma2less  &dot2greater  &slash2question  &kp RIGHT_SHIFT
                                   &gl1t  &l1t  &kp BACKSPACE    &kp SPACE  &kp ENTER &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &kp N1  &kp N2     &kp N3    &kp N4           &kp N5             &kp N6         &kp N7    &kp N8     &kp N9     &kp N0  &trans
&trans  &trans  &kp COMMA  &kp DOT   &lcurly2lsquare  &rcurly2rsquare    &kp LEFT       &kp DOWN  &kp UP     &kp RIGHT  &trans  &trans
&trans  &trans  &kp FSLH   &kp BSLH  &kp LS(N9)  	    &kp LS(N0)         &trans 			  &trans    &kp MINUS  &kp EQUAL  &trans  &trans
                           &trans    &trans        &trans    &trans  &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp LBKT                &kp RIGHT_BRACKET  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RPAR  &kp ENTER
&kp LCTRL  &trans    &trans  &trans    &trans    &kp LBRC                &kp RBRC           &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &kp LEFT_PARENTHESIS    &kp RPAR           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &trans                  &trans             &trans        &kp NUMBER_0
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
