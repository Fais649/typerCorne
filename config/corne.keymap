/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// V2 (latest)
#define AS(keycode) &am LS(keycode) keycode    
#define RAS(keycode) &am keycode LS(keycode)    
#define AG(keycode) &am LG(keycode) keycode     

/ {
    macros {
						lm: lm {
							compatible = "zmk,behavior-macro";
							#binding-cells = <0>;
							bindings =
									 <&macro_tap &sl 1>
									, <&macro_tap &sk LGUI>;
						};
    };

		behaviors {
			am: auto_mod {
					compatible = "zmk,behavior-hold-tap";
					#binding-cells = <2>;
					tapping_term_ms = <300>;
					quick_tap_ms = <250>;
					flavor = "tap-preferred";
					bindings = <&kp>, <&kp>;
			};

			st: sticky_tap {
					compatible = "zmk,behavior-hold-tap";
					#binding-cells = <2>;
					tapping_term_ms = <300>;
					quick_tap_ms = <0>;
					flavor = "tap-preferred";
					bindings = <&kp>, <&sl>;
			};

			clt: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
		  			quick_tap_ms = <250>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };

				tog1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TILDE>, <&tog 1>;
        };
        shftcap: tap_dance_shift_cap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>,  <&kp CAPS>;
        };
		};

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | C|  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            display-name = "core;";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R   &kp T                &kp Y                 &kp U           &kp I        &kp O         &kp P     &kp TILDE
&kp LALT        		&kp A  &kp S  &kp D     &kp F   &kp G               &kp H               &kp J           &kp K        &kp L         AS(SEMI)  AS(SQT)
&mt LSHIFT LS(LBKT)     &kp Z  &kp X  &kp C     &kp V   &kp B           &kp N               &kp M           AS(COMMA)    AS(DOT)       AS(FSLH)  &mt RSHIFT RS(RBKT)
		 							  &mt LGUI LS(N9) &mt LALT BACKSPACE   &clt 1 SPACE         &clt 2 ENTER  &mt RSHIFT ESC &mt RGUI LS(N0)
            >;
        };

        lower_layer {
            display-name = "sym;";
            bindings = <
&trans  &kp LG(N1)  &kp LG(N2)     &kp N1      &kp N2         &kp N3               &kp F1  &kp F2  		   &kp F3     &kp F4     &kp EQUAL   &kp MINUS   
&trans  &kp LG(N3)  &kp LG(N4)     &kp N4      &kp N5         &kp N6							 &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans   &trans
&trans  &trans      &trans         &kp N7      &kp N8         &kp N9							 &kp F10  &kp F11  		   &kp F12  &trans     &trans   &trans   
																	 &kp N0      &trans         &trans               &trans  &kp LG(TAB)   AS(N0)
            >;
        };

        raise_layer {
            display-name = "move;";
            bindings = <
&trans  &trans  &trans     &trans     &kp LS(MINUS)   &kp LS(EQUAL)          &kp F1     &kp F2     &kp F3     &kp F4     &kp F11  &kp F12
&trans  &trans  &trans     &trans     &kp LBKT        &kp RBKT               &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans   &trans
&trans  &trans  &trans     &trans     &trans          &trans                 &trans     &trans     &trans     &trans     &trans   &trans
                           &trans     &trans          &clt 3 BACKSPACE       &trans     &trans     &trans
            >;
        };

        extra_1 {
            display-name = "util;";
            bindings = <
&trans  &trans  &trans     &trans      &trans     &trans            &trans     &trans       &trans     &trans     &trans  	&bt BT_PRV
&trans  &trans  &trans     &trans      &trans     &trans            &kp LEFT   &kp DOWN     &kp UP     &kp RIGHT  &trans    &bt BT_NXT
&trans  &trans  &trans     &trans      &trans     &trans            &trans     &trans       &trans     &trans     &trans    &bt BT_CLR
                           &trans      &trans     &trans            &trans     &trans       &trans
            >;
        };

        extra_2 { status = "reserved"; };
        extra_3 { status = "reserved"; };
    };
};

		
// V1
/* #define AS(keycode) &am LS(keycode) keycode     */
/* #define RAS(keycode) &am keycode LS(keycode)     */
/* #define AG(keycode) &am LG(keycode) keycode      */
/**/
/* #define AA(modded, keycode) &am modded keycode      */
/**/
/* #define RAG(keycode) &am keycode LG(keycode)      */
/* #define ST(keycode, layer) &st keycode layer       */
/**/
/* / { */
/*     macros { */
/* 						lm: lm { */
/* 							compatible = "zmk,behavior-macro"; */
/* 							#binding-cells = <0>; */
/* 							bindings = */
/* 									 <&macro_tap &sl 1> */
/* 									, <&macro_tap &sk LGUI>; */
/* 						}; */
/*     }; */
/**/
/* 		behaviors { */
/* 			am: auto_mod { */
/* 					compatible = "zmk,behavior-hold-tap"; */
/* 					#binding-cells = <2>; */
/* 					tapping_term_ms = <300>; */
/* 					quick_tap_ms = <250>; */
/* 					flavor = "tap-preferred"; */
/* 					bindings = <&kp>, <&kp>; */
/* 			}; */
/**/
/* 			st: sticky_tap { */
/* 					compatible = "zmk,behavior-hold-tap"; */
/* 					#binding-cells = <2>; */
/* 					tapping_term_ms = <300>; */
/* 					quick_tap_ms = <0>; */
/* 					flavor = "tap-preferred"; */
/* 					bindings = <&kp>, <&sl>; */
/* 			}; */
/**/
/* 			clt: custom_layer_tap { */
/*             compatible = "zmk,behavior-hold-tap"; */
/*             #binding-cells = <2>; */
/*             flavor = "tap-preferred"; */
/*             tapping-term-ms = <200>; */
/* 		  			quick_tap_ms = <250>; */
/*             bindings = <&mo>, <&kp>; */
/*             display-name = "Layer-Tap"; */
/*         }; */
/* 		}; */
/**/
/*     keymap { */
/*         compatible = "zmk,keymap"; */
/*         default_layer { */
/*             // ----------------------------------------------------------------------------------------- */
/*             // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP | */
/*             // | C|  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | */
/*             // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  | */
/*             //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT | */
/**/
/*             display-name = "core;"; */
/*             bindings = < */
/* &kp TAB              &kp Q  &kp W  &kp E     &kp R   &kp T              &kp Y               &kp U     &kp I        &kp O         &kp P     &kp DELETE */
/* &kp ESC        			 &kp A  &kp S  &kp D     &kp F   &kp G              &kp H               &kp J     &kp K        &kp L         AS(SEMI)  AS(SQT) */
/* &kp LSHFT            &kp Z  &kp X  &kp C     &kp V   &kp B              &kp N               &kp M     AS(COMMA)    AS(DOT)       AS(FSLH)  &kp RIGHT_SHIFT */
/* 		 							   &kp LGUI   &mt LCTRL ESC        &clt 1 BACKSPACE     &kp SPACE    &mt RALT TAB  &kp ENTER */
/*             >; */
/*         }; */
/**/
/*         lower_layer { */
/*             display-name = "hax;"; */
/*             bindings = < */
/* &trans  AS(N1)   AS(N2)     AS(N3)     AA(LG(N1), F1)     AA(LG(N2), F2)       AA(LG(N3), F3)    AA(LG(N4), F4)       &kp N8     &kp N9  &kp N0  &kp F12 */
/* &trans  AS(N4)  AS(N5)     AS(N6)      RAS(LBKT)          RAS(RBKT)            &kp LEFT          &kp DOWN  &kp UP     &kp RIGHT  &trans  	 &trans */
/* &trans  AS(N7)  AS(N8)     AS(N9)      &kp LS(N9)  	      &kp LS(N0)           AS(MINUS)         AS(EQUAL) &trans     &trans     AS(BSLH)  &trans */
/*                            AS(N0)      &trans             &trans               &trans            &trans    &trans */
/*             >; */
/*         }; */
/**/
/*         raise_layer { */
/*             display-name = "Raise"; */
/*             bindings = < */
/* &kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp LBKT                &kp RIGHT_BRACKET  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RPAR  &kp ENTER */
/* &kp LCTRL  &trans    &trans  &trans    &trans    &kp LBRC                &kp RBRC           &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BSLH  &kp GRAVE */
/* &kp LSHFT  &trans    &trans  &trans    &trans    &kp LEFT_PARENTHESIS    &kp RPAR           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PIPE  &kp TILDE */
/*                              &kp LGUI  &trans    &trans                  &trans             &trans        &kp NUMBER_0 */
/*             >; */
/*         }; */
/**/
/*         extra_1 { status = "reserved"; }; */
/*         extra_2 { status = "reserved"; }; */
/*         extra_3 { status = "reserved"; }; */
/*     }; */
/* }; */
